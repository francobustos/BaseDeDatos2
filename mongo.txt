1) Show title and special_features of films that are PG-13

db.films.find({Rating:'PG-13'}, {Title:1, 'Special Features':1, _id:0})

/* 1 */
{
    "Rating" : "PG-13",
    "Special Features" : "Trailers,Deleted Scenes",
    "Title" : "AIRPLANE SIERRA"
}

/* 2 */
{
    "Rating" : "PG-13",
    "Special Features" : "Trailers,Deleted Scenes",
    "Title" : "ALABAMA DEVIL"
}

etc... (Hay 50 resultados)

2) Get a list of all the different films duration.

db.films.distinct("Length")

/* 1 */
[
    "100",
    "101",
    "102",
    "103",
    "104",
    "105",
    "106",
    etc...
]

3) Show title, rental_rate and replacement_cost of films that have replacement_cost from 20.00 up to 24.00

db.films.find({'Replacement Cost':{$gte:20.00,$lte:24.00}}, {Title:1, 'Rental Duration':1, 'Replacement Cost':1, _id:0})

Fetched 0 record(s) in 3ms
Muestra esto no porque en la base de datos no haya replacement cost mayores o igual a 20 y menores o igual a 24,
El problema surge en que la base de datos que yo estoy utilizando, el valor de replacement cost es un string y
no un integer.

4) Show title, category and rating of films that have 'Behind the Scenes' as special_features

db.films.find({"Special Features": "Behind the Scenes"},{Title:1, Category:1, Rating:1, _id:0})

/* 1 */
{
    "_id" : 43,
    "Category" : "Family",
    "Rating" : "G",
    "Title" : "ATLANTIS CAUSE"
}

/* 2 */
{
    "_id" : 55,
    "Category" : "Sci-Fi",
    "Rating" : "G",
    "Title" : "BARBARELLA STREETCAR"
}

etc...

5) Show first name and last name of actors that acted in 'ZOOLANDER FICTION'

db.films.find({Title:'ZOOLANDER FICTION'},{"Actors.First name":1, "Actors.Last name":1, _id:0})

/* 1 */
{
    "Actors" : [
        {
            "First name" : "CARMEN",
            "Last name" : "HUNT"
        },
        {
            "First name" : "MARY",
            "Last name" : "TANDY"
        },
        {
            "First name" : "PENELOPE",
            "Last name" : "CRONYN"
        },
        {
            "First name" : "WHOOPI",
            "Last name" : "HURT"
        },
        {
            "First name" : "JADA",
            "Last name" : "RYDER"
        }
    ]
}

6) Show the address, city and country of the store with id 1
db.stores.find({_id:1}, {Address:1, City:1, Country:1, _id:0})

/* 1 */
{
    "Address" : "47 MySakila Drive",
    "City" : "Lethbridge",
    "Country" : "Canada"
}

7)Show pair of film titles and rating of films that have the same rating.
db.films.aggregate(
  [
    { $group : { _id : "$Rating", films: { $push: "$Title" } } }
  ]
)

El aggregate te permite utilizar agregaciones, puede ser una o varias.
Group te devuelve un nuevo diccionario en la que le indicas el id (te agrupa los
registros que coincidan su campo con el valor del id, en este caso por rating), y luego los campos(
en este caso utilizamos el acumulador push que retorna un array de valores que en este
caso son los titulos)

/* 1 */
{
    "_id" : "PG",
    "films" : [
        "ACADEMY DINOSAUR",
        "AGENT TRUMAN",
        "ALASKA PHANTOM",
        "ALI FOREVER",
        "AMADEUS HOLY",
        "ARIZONA BANG",
        "ARSENIC INDEPENDENCE",
        "BEDAZZLED MARRIED",
        "BEHAVIOR RUNAWAY",
        "BILL OTHERS",
        "BIRCH ANTITRUST",
        "BLACKOUT PRIVATE",
        "BOILED DARES",
        "BORN SPINAL",
        etc...
        ]
}

/* 2 */
etc...

8) Get all the films that are available in store id 2 and the manager first/last
name of this store (the manager will appear in all the rows).

db.stores.find({_id:2},{"Inventory.Film Title":1,"Staff.First Name":1, "Staff.Last Name":1})

{
    "_id" : 2,
    "Inventory" : [
        {
            "Film Title" : "ACADEMY DINOSAUR"
        },
        {
            "Film Title" : "ACADEMY DINOSAUR"
        },
        {
            "Film Title" : "ACADEMY DINOSAUR"
        },
        {
            "Film Title" : "ACADEMY DINOSAUR"
        },
        {
            "Film Title" : "ACE GOLDFINGER"
        }, etc...
      ],
      "Staff" : [
        {
            "First Name" : "Jon",
            "Last Name" : "Stephens"
        }
    ]
}

Es lo mejor que pude hacerlo, no supe no hacer para que no se repita el nombre de las peliculas
